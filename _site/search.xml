<?xml version="1.0" encoding="utf-8"?>
<search>
  
    <entry>
      <title><![CDATA[백준 10986 나머지 합]]></title>
      <url>/ps/%EB%B0%B1%EC%A4%80/2023/01/01/%EB%82%98%EB%A8%B8%EC%A7%80-%ED%95%A9/</url>
      <content type="text"><![CDATA[백준 10986 나머지합문제 설명수 N개 A1, A2, …, AN이 주어졌을 때, 연속된 부분 구간의 합이 M으로 나누어 떨어지는 구간의 개수를 구하라.즉, Ai + … + Aj (i ≤ j)의 합이 M으로 나누어 떨어지는 (i,j)쌍의 개수를 구해야 한다.해결 전략첫 번째로, 연속된 부분 구간의 합을 보고 prefix Sum을 생각해볼 수 있다.두 번째로, 합의 M으로 나누어 떨어지는에서 모듈러 연산을 떠올릴 수 있다.특히, 모듈러 연산에서 (a - b) % mod = ((a % mod) - (b % mod)) % mod를 이용할 수 있다.이를 이용하여, (pSum[i] - pSum[j]) % M = ((pSum[i] % M) - (pSum[j] % M)) % M이 되는 (i,j)를 구한다.test input5 31 2 3 1 2pSum1 3 6 7 9pSum % M1 0 0 1 0주의할 점시간 제한이 1초, N 최대 10^6이므로, 시간 복잡도 O(N^2)일 경우 TLE가 나온다.N개의 수의 범위가 최대 10^9이므로, long long 타입을 사용해야 한다.연속된 부분 구간의 합이 M이 아니라, 합이 M으로 나누어 떨이져야 한다.모듈러 연산을 한 수를 배열에 넣을 때 long long 타입을 사용해야 한다.추가 고려사항prefix Sum은 일반적으로 배열에 저장하기 때문에 처음에는 배열에 저장했다.문제를 풀고서 봤을 때, 배열을 사용할 필요가 없다는 것을 알게 되었다.배열을 사용하지 않을 때, 공간복잡도가 O(N + M)에서 O(M)으로 줄어들 뿐만 아니라,배열 접근하는 횟수를 줄여줘서 시간도 줄어드는 것을 볼 수 있었다.테스트 케이스test16 53 8 7 2 1 3output13test25 99 9 9 9 9output215test33 10001000000000 1000000000 1000001000 1000output36코드C++#include &lt;iostream&gt;using namespace std;typedef ll ll;void IO(){    ios_base::sync_with_stdio(false);    cin.tie(nullptr);    cout.tie(nullptr);}int main(){    IO();    ll N, M, A, pSumModM = 0, count = 0, numModM[1001] = {};    cin &gt;&gt; N &gt;&gt; M;    for (ll i = 0; i &lt; N; ++i)    {        cin &gt;&gt; A;        pSumModM = (pSumModM + A) % M;        numModM[pSumModM]++;    }    count += numModM[0];    for (ll i = 0; i &lt; M; ++i)        count += (numModM[i] * (numModM[i] - 1)) / 2;    cout &lt;&lt; count;    return 0;}Pythonimport sysN, M = map(int, input().split())inputList = list(map(int, sys.stdin.readline().split()))numModM = [0 for _ in range(M)]pSum = 0; count = 0for i in range(N):    pSum += inputList[i]    pSum %= M    numModM[pSum] += 1count += numModM[0]for i in range(M):    count += numModM[i] * (numModM[i] - 1) / 2print(int(count))]]></content>
      <categories>
        
          <category> PS </category>
        
          <category> 백준 </category>
        
      </categories>
      <tags>
        
          <tag> PS </tag>
        
          <tag> 백준 </tag>
        
      </tags>
      <tags></tags>
    </entry>
  
</search>
